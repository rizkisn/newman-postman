{
	"info": {
		"_postman_id": "2433446c-ada1-413d-aea3-0d85e77fa05a",
		"name": "Book Batch",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "37316032",
		"_collection_link": "https://www.postman.com/rizkisn/workspace/rizki-api-public/collection/37316032-2433446c-ada1-413d-aea3-0d85e77fa05a?action=share&source=collection_link&creator=37316032"
	},
	"item": [
		{
			"name": "postApiClient",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							"",
							"pm.test(\"Verify access token is not null\", function () {",
							"    pm.expect(pm.response.json().accessToken).not.equal(null);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var name = pm.variables.replaceIn(\"{{$randomFirstName}}\");",
							"var email = pm.variables.replaceIn(name + \"@rsn.com\");",
							"",
							"",
							"pm.collectionVariables.set(\"name\", name);",
							"pm.collectionVariables.set(\"email\", email);",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n   \"clientName\": \"{{name}}\",\n   \"clientEmail\": \"{{email}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseurl}}/api-clients/",
					"host": [
						"{{baseurl}}"
					],
					"path": [
						"api-clients",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "getStatus",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response time is less than 500ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(500);",
							"});",
							"",
							"pm.test(\"Response message status\", function () {",
							"\tpm.response.to.have.status(\"OK\");",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseurl}}/status",
					"host": [
						"{{baseurl}}"
					],
					"path": [
						"status"
					]
				}
			},
			"response": []
		},
		{
			"name": "getBooks",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseurl}}/books?type=&limit=",
					"host": [
						"{{baseurl}}"
					],
					"path": [
						"books"
					],
					"query": [
						{
							"key": "type",
							"value": ""
						},
						{
							"key": "limit",
							"value": ""
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "getSingleBooks",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let responseJson = pm.response.json();",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Response time is less than 500ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(500);",
							"});",
							"pm.test(\"id = 1\", function () {",
							"    pm.expect(responseJson.id).to.eql(1);",
							"});",
							"pm.test(\"Name = The Russian\", function () {",
							"    pm.expect(responseJson.name).to.eql(\"The Russian\");",
							"});",
							"pm.test(\"Author = James Patterson and James O. Born\", function () {",
							"    pm.expect(responseJson.author).to.eql(\"James Patterson and James O. Born\");",
							"});",
							"pm.test(\"isbn = 1780899475\", function () {",
							"    pm.expect(responseJson.isbn).to.eql(\"1780899475\");",
							"});",
							"pm.test(\"type = fiction\", function () {",
							"    pm.expect(responseJson.type).to.eql(\"fiction\");",
							"});",
							"pm.test(\"price = 12.98\", function () {",
							"    pm.expect(responseJson.price).to.eql(12.98);",
							"});",
							"pm.test(\"current-stok = 12\", function () {",
							"    pm.expect(responseJson['current-stock']).to.eql(12);",
							"});",
							"pm.test(\"available = true\", function () {",
							"    pm.expect(responseJson.available).to.eql(true);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseurl}}/books/:idbooks",
					"host": [
						"{{baseurl}}"
					],
					"path": [
						"books",
						":idbooks"
					],
					"variable": [
						{
							"key": "idbooks",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "postOrder",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							"pm.test(\"Response message status\", function () {",
							"\tpm.response.to.have.status(\"Created\");",
							"});",
							"",
							"pm.test(\"Verify access token is not null\", function () {",
							"    pm.expect(pm.response.json().orderId).not.equal(null);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"bookId\": 1,\n  \"customerName\": \"{{$randomFirstName}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseurl}}/orders",
					"host": [
						"{{baseurl}}"
					],
					"path": [
						"orders"
					]
				}
			},
			"response": []
		},
		{
			"name": "UpdateOrder",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"customerName\": \"Rizkisn\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseurl}}/orders/:orderid",
					"host": [
						"{{baseurl}}"
					],
					"path": [
						"orders",
						":orderid"
					],
					"variable": [
						{
							"key": "orderid",
							"value": "-6zfbHKzU3WheRP1BA2iO"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "getUpdateOrder",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseurl}}/orders/:orderid",
					"host": [
						"{{baseurl}}"
					],
					"path": [
						"orders",
						":orderid"
					],
					"variable": [
						{
							"key": "orderid",
							"value": "-6zfbHKzU3WheRP1BA2iO"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "getOrders",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseurl}}/orders",
					"host": [
						"{{baseurl}}"
					],
					"path": [
						"orders"
					]
				}
			},
			"response": []
		},
		{
			"name": "singleOrders",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let responseJson = pm.response.json();",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							"pm.test(\"id = PKgb-9mJIEhS4RtdgvLQb\", function () {",
							"    pm.expect(responseJson.id).to.eql(\"PKgb-9mJIEhS4RtdgvLQb\");",
							"});",
							"pm.test(\"bookId = 1\", function () {",
							"    pm.expect(responseJson.bookId).to.eql(1);",
							"});",
							"pm.test(\"customerName = nelle\", function () {",
							"    pm.expect(responseJson.customerName).to.eql(\"Nelle\");",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseurl}}/orders/:orderid",
					"host": [
						"{{baseurl}}"
					],
					"path": [
						"orders",
						":orderid"
					],
					"variable": [
						{
							"key": "orderid",
							"value": "PKgb-9mJIEhS4RtdgvLQb"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "DeleteOrder",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {",
							"    pm.response.to.have.status(204);",
							"});",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{accessToken}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseurl}}/orders/:orderid",
					"host": [
						"{{baseurl}}"
					],
					"path": [
						"orders",
						":orderid"
					],
					"variable": [
						{
							"key": "orderid",
							"value": "6JBtpZIRWu17GlKcUPS1k"
						}
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "accessToken",
			"value": "9c5d80cd26bc281263715703b8d4cc6dffc1746ffc8380fd7c215b25fe6ebaff",
			"type": "string"
		},
		{
			"key": "name",
			"value": ""
		},
		{
			"key": "email",
			"value": ""
		}
	]
}